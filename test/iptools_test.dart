import 'package:ip2location/iptools.dart';
import 'package:test/test.dart';

void main() {
  group('Test IPTools', () {
    test('Test Is IPv4', () async {
      var ip = '8.8.8.8';
      expect(IPTools.isIPv4(ip), true);
    });
    test('Test IPv4 To Decimal', () async {
      var ip = '175.144.140.232';
      expect(IPTools.ipv4ToDecimal(ip)?.toInt(), 2945486056);
    });
    test('Test Is IPv6', () async {
      var ip = '2600:1f18:45b0:5b00:f5d8:4183:7710:ceec';
      expect(IPTools.isIPv6(ip), true);
    });
    test('Test IPv6 To Decimal', () async {
      var ip = '2600:1f18:45b0:5b00:f5d8:4183:7710:ceec';
      expect(
        IPTools.ipv6ToDecimal(ip),
        BigInt.parse('50511294517568083089461819682126352108'),
      );
    });
    test('Test Decimal To IPv4', () async {
      var num = 2945486056;
      expect(IPTools.decimalToIPv4(BigInt.from(num)), '175.144.140.232');
    });
    test('Test Decimal To IPv6', () async {
      var num = '22398978840339333967292465152';
      expect(
        IPTools.decimalToIPv6(BigInt.parse(num)),
        '::4860:44:1f4:8888:211:0',
      );
    });
    test('Test Compress IPv6', () async {
      var ip = '2600:1f18:045b:005b:f5d8:0:000:ceec';
      expect(IPTools.compressIPv6(ip), '2600:1f18:45b:5b:f5d8::ceec');
    });
    test('Test Expand IPv6', () async {
      var ip = '::45b:05b:f5d8:0:000:ceec';
      expect(IPTools.expandIPv6(ip), '0000:0000:045b:005b:f5d8:0000:0000:ceec');
    });
    test('Test IPv4 To CIDR', () async {
      var cidrList = IPTools.ipv4ToCidr('10.0.0.0', '10.10.2.255');
      expect(cidrList, [
        '10.0.0.0/13',
        '10.8.0.0/15',
        '10.10.0.0/23',
        '10.10.2.0/24',
      ]);
    });
    test('Test IPv6 To CIDR', () async {
      var cidrList = IPTools.ipv6ToCidr(
        '2001:4860:4860:0000:0000:0000:0000:8888',
        '2001:4860:4860:0000:eeee:ffff:ffff:ffff',
      );
      expect(cidrList, [
        '2001:4860:4860::8888/125',
        '2001:4860:4860::8890/124',
        '2001:4860:4860::88a0/123',
        '2001:4860:4860::88c0/122',
        '2001:4860:4860::8900/120',
        '2001:4860:4860::8a00/119',
        '2001:4860:4860::8c00/118',
        '2001:4860:4860::9000/116',
        '2001:4860:4860::a000/115',
        '2001:4860:4860::c000/114',
        '2001:4860:4860::1:0/112',
        '2001:4860:4860::2:0/111',
        '2001:4860:4860::4:0/110',
        '2001:4860:4860::8:0/109',
        '2001:4860:4860::10:0/108',
        '2001:4860:4860::20:0/107',
        '2001:4860:4860::40:0/106',
        '2001:4860:4860::80:0/105',
        '2001:4860:4860::100:0/104',
        '2001:4860:4860::200:0/103',
        '2001:4860:4860::400:0/102',
        '2001:4860:4860::800:0/101',
        '2001:4860:4860::1000:0/100',
        '2001:4860:4860::2000:0/99',
        '2001:4860:4860::4000:0/98',
        '2001:4860:4860::8000:0/97',
        '2001:4860:4860::1:0:0/96',
        '2001:4860:4860::2:0:0/95',
        '2001:4860:4860::4:0:0/94',
        '2001:4860:4860::8:0:0/93',
        '2001:4860:4860::10:0:0/92',
        '2001:4860:4860::20:0:0/91',
        '2001:4860:4860::40:0:0/90',
        '2001:4860:4860::80:0:0/89',
        '2001:4860:4860::100:0:0/88',
        '2001:4860:4860::200:0:0/87',
        '2001:4860:4860::400:0:0/86',
        '2001:4860:4860::800:0:0/85',
        '2001:4860:4860::1000:0:0/84',
        '2001:4860:4860::2000:0:0/83',
        '2001:4860:4860::4000:0:0/82',
        '2001:4860:4860::8000:0:0/81',
        '2001:4860:4860:0:1::/80',
        '2001:4860:4860:0:2::/79',
        '2001:4860:4860:0:4::/78',
        '2001:4860:4860:0:8::/77',
        '2001:4860:4860:0:10::/76',
        '2001:4860:4860:0:20::/75',
        '2001:4860:4860:0:40::/74',
        '2001:4860:4860:0:80::/73',
        '2001:4860:4860:0:100::/72',
        '2001:4860:4860:0:200::/71',
        '2001:4860:4860:0:400::/70',
        '2001:4860:4860:0:800::/69',
        '2001:4860:4860:0:1000::/68',
        '2001:4860:4860:0:2000::/67',
        '2001:4860:4860:0:4000::/66',
        '2001:4860:4860:0:8000::/66',
        '2001:4860:4860:0:c000::/67',
        '2001:4860:4860:0:e000::/69',
        '2001:4860:4860:0:e800::/70',
        '2001:4860:4860:0:ec00::/71',
        '2001:4860:4860:0:ee00::/73',
        '2001:4860:4860:0:ee80::/74',
        '2001:4860:4860:0:eec0::/75',
        '2001:4860:4860:0:eee0::/77',
        '2001:4860:4860:0:eee8::/78',
        '2001:4860:4860:0:eeec::/79',
        '2001:4860:4860:0:eeee::/80',
      ]);
    });
    test('Test CIDR To IPv4', () async {
      var cidr = '123.245.99.13/26';
      expect(IPTools.cidrToIPv4(cidr), ['123.245.99.0', '123.245.99.63']);
    });
    test('Test CIDR To IPv6', () async {
      var cidr = '2002:1234::abcd:ffff:c0a8:101/62';
      expect(IPTools.cidrToIPv6(cidr), [
        '2002:1234:0000:0000:0000:0000:0000:0000',
        '2002:1234:0000:0003:ffff:ffff:ffff:ffff',
      ]);
      cidr = '2603:7080:2f02:422f:6d3a:755b:3aa7:2eec/112';
      expect(IPTools.cidrToIPv6(cidr), [
        '2603:7080:2f02:422f:6d3a:755b:3aa7:0000',
        '2603:7080:2f02:422f:6d3a:755b:3aa7:ffff',
      ]);
    });
  } /*, skip: 'Skipping IPTools tests first.'*/);
}
